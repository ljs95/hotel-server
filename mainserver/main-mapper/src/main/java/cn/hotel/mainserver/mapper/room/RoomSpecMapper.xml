<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hotel.mainserver.mapper.room.RoomSpecMapper" >
  <resultMap id="BaseResultMap" type="cn.hotel.mainserver.model.room.RoomSpec" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="price" property="price" javaType="cn.hotel.mainserver.model.room.extension.RoomSpecPrice" typeHandler="cn.hotel.mainserver.mapper.handlers.JsonTypeHandler"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type_id
  </sql>
  <resultMap id="withTypeMap" type="cn.hotel.mainserver.model.room.RoomSpec" extends="BaseResultMap">
    <association property="roomType" javaType="cn.hotel.mainserver.model.room.RoomType">
      <id column="r_id" property="id" />
      <result column="r_name" property="name" />
      <result column="r_number" property="number" />
    </association>
  </resultMap>
  <sql id="withTypeSql">
    SELECT
      rs.*,
      rt.id AS r_id,
      rt.NAME AS r_name,
      rt.number AS r_number
    FROM
      room_spec AS rs
      LEFT JOIN room_type AS rt ON rs.type_id = rt.id

  </sql>
  <select id="selectByPrimaryKey" resultMap="withTypeMap">
    <include refid="withTypeSql" /> where rs.id = #{id}
  </select>
  <select id="table" resultMap="withTypeMap">
    <include refid="withTypeSql" />
    <where>
      <if test="typeId != null and typeId != ''">
        and rs.type_id = #{typeId}
      </if>
    </where>
  </select>
  <select id="select" resultMap="BaseResultMap">
    select * from room_spec
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room_spec
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.hotel.mainserver.model.room.RoomSpec" >
    insert into room_spec (name, type_id,
      price)
    values (#{name,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER},
      #{price,typeHandler=cn.hotel.mainserver.mapper.handlers.JsonTypeHandler})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hotel.mainserver.model.room.RoomSpec" >
    update room_spec
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="priceConfig != null" >
        price_config = #{priceConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.hotel.mainserver.model.room.RoomSpec" >
    update room_spec
    set name = #{name,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      price_config = #{priceConfig,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hotel.mainserver.model.room.RoomSpec" >
    update room_spec
    set name = #{name}, type_id = #{typeId}, price = #{price,typeHandler=cn.hotel.mainserver.mapper.handlers.JsonTypeHandler}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>